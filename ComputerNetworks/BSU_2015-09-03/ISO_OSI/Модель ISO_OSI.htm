<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0049)http://www.nestor.minsk.by/sr/sr0011/sr01104.html --><HTML><HEAD><TITLE>СЕТЕВЫЕ РЕШЕНИЯ</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR>
<META content="компьютер, интернет, программа, игры, новости, CD, литература" 
http-equiv=keys></HEAD>
<BODY topMargin=0><B>
<BLOCKQUOTE>
  <P><FONT face=Arial size=2><BR></FONT><FONT face=Arial size=4>Модель ISO/OSI – 
  это должен знать каждый</FONT></B></P>
  <P><FONT face=Arial size=2><B>В сетевой науке, как и в любой другой области 
  знаний, существует два принципиальных подхода к обучению: движение от общего к 
  частному и наоборот. Ну не то чтобы по жизни люди используют эти подходы в 
  чистом виде, но все-таки на начальных этапах каждый обучающийся выбирает для 
  себя одно из вышеозначенных направлений. Для высшей школы (по крайней мере 
  (пост)советского образца) более характерен первый метод, для самообразования 
  чаще всего второй: работал себе человек в сети, решал время от времени мелкие 
  однопользовательского характера административные задачи, и вдруг захотелось 
  ему разобраться -- а как, собственно, вся эта хреновина 
  устроена?</B></FONT></P>
  <P><FONT face=Arial size=2><B>Но цель этой статьи -- не философские 
  рассуждения о методологии обучения. Мне хотелось бы представить вниманию 
  начинающих сетевиков то <I>общее </I>и главное, от которого, как от печки, 
  можно танцевать к самым навороченным частным лавочкам. Понимая семиуровневую 
  модель OSI и научившись "узнавать" ее уровни в уже известных вам технологиях, 
  вы без труда сможете двигаться дальше в любом избранном вами направлении 
  сетевой отрасли. Модель OSI суть тот каркас, на который будет навешиваться 
  любое новое знание о сетях.</B></FONT></P>
  <H3><FONT face=Arial size=2>Данная модель так или иначе упоминается 
  практически в любой современной литературе по сетям, а также во многих 
  спецификациях конкретных протоколов и технологий. Не чувствуя необходимости 
  изобретать велосипед, я решила опубликовать отрывки из работы Н. Олифер, В. 
  Олифер (Центр Информационных Технологий ) под названием “Роль коммуникационных 
  протоколов и функциональное назначение основных типов оборудования 
  корпоративных сетей”, которую считаю наилучшей и исчерпывающей публикацией в 
  на эту тему.</FONT></H3>
  <P><FONT face=Arial size=2>шеф-редактор</FONT></P><B>
  <P><FONT face=Arial size=2>модель</FONT></P></B>
  <P align=justify><FONT face=Arial size=2>Из того, что протокол является 
  соглашением, принятым двумя взаимодействующими объектами, в данном случае 
  двумя работающими в сети компьютерами, совсем не следует, что он обязательно 
  представляет собой стандарт. Но на практике при реализации сетей стремятся 
  использовать стандартные протоколы. Это могут быть фирменные, национальные или 
  международные стандарты.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Международная Организация по 
  Стандартам (International Standards Organization, ISO) разработала модель, 
  которая четко определяет различные уровни взаимодействия систем, дает им 
  стандартные имена и указывает, какую работу должен делать каждый уровень. Эта 
  модель называется моделью взаимодействия открытых систем (Open System 
  Interconnection, OSI) или моделью ISO/OSI.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В модели OSI взаимодействие делится 
  на семь уровней или слоев (рис. 1.1). Каждый уровень имеет дело с одним 
  определенным аспектом взаимодействия. Таким образом, проблема взаимодействия 
  декомпозирована на 7 частных проблем, каждая из которых может быть решена 
  независимо от других. Каждый уровень поддерживает интерфейсы с выше- и 
  нижележащими уровнями.</FONT></P><FONT size=2>
  <P><FONT face=Arial>&nbsp;<IMG border=0 height=508 
  src="Модель ISO_OSI.files/sr01104a.gif" width=457></FONT></P></FONT><I>
  <P align=left><FONT face=Arial size=2>Рис. 1.1. Модель взаимодействия открытых 
  систем ISO/OSI</FONT></I><FONT size=2></P></FONT>
  <P align=justify><FONT face=Arial size=2>Модель OSI описывает только системные 
  средства взаимодействия, не касаясь приложений конечных пользователей. 
  Приложения реализуют свои собственные протоколы взаимодействия, обращаясь к 
  системным средствам. Следует иметь в виду, что приложение может взять на себя 
  функции некоторых верхних уровней модели OSI, в таком случае, при 
  необходимости межсетевого обмена оно обращается напрямую к системным 
  средствам, выполняющим функции оставшихся нижних уровней модели 
OSI.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Приложение конечного пользователя 
  может использовать системные средства взаимодействия не только для организации 
  диалога с другим приложением, выполняющимся на другой машине, но и просто для 
  получения услуг того или иного сетевого сервиса, например, доступа к удаленным 
  файлам, получение почты или печати на разделяемом принтере.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Итак, пусть приложение обращается с 
  запросом к прикладному уровню, например к файловому сервису. На основании 
  этого запроса программное обеспечение прикладного уровня формирует сообщение 
  стандартного формата, в которое помещает служебную информацию (заголовок) и, 
  возможно, передаваемые данные. Затем это сообщение направляется 
  представительному уровню. Представительный уровень добавляет к сообщению свой 
  заголовок и передает результат вниз сеансовому уровню, который в свою очередь 
  добавляет свой заголовок и т.д. Некоторые реализации протоколов 
  предусматривают наличие в сообщении не только заголовка, но и концевика. 
  Наконец, сообщение достигает самого низкого, физического уровня, который 
  действительно передает его по линиям связи.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Когда сообщение по сети поступает на 
  другую машину, оно последовательно перемещается вверх с уровня на уровень. 
  Каждый уровень анализирует, обрабатывает и удаляет заголовок своего уровня, 
  выполняет соответствующие данному уровню функции и передает сообщение 
  вышележащему уровню.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Кроме термина "сообщение" (message) 
  существуют и другие названия, используемые сетевыми специалистами для 
  обозначения единицы обмена данными. В стандартах ISO для протоколов любого 
  уровня используется такой термин как "протокольный блок данных" - Protocol 
  Data Unit (PDU). Кроме этого, часто используются названия кадр (frame), пакет 
  (packet), дейтаграмма (datagram).</FONT></P><B>
  <P align=justify><FONT face=Arial size=2>Функции уровней модели 
  ISO/OSI</FONT></B><FONT size=2></P></FONT><I>
  <P align=justify><FONT face=Arial size=2>Физический уровень.</I> Этот уровень 
  имеет дело с передачей битов по физическим каналам, таким, например, как 
  коаксиальный кабель, витая пара или оптоволоконный кабель. К этому уровню 
  имеют отношение характеристики физических сред передачи данных, такие как 
  полоса пропускания, помехозащищенность, волновое сопротивление и другие. На 
  этом же уровне определяются характеристики электрических сигналов, такие как 
  требования к фронтам импульсов, уровням напряжения или тока передаваемого 
  сигнала, тип кодирования, скорость передачи сигналов. Кроме этого, здесь 
  стандартизуются типы разъемов и назначение каждого контакта.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Функции физического уровня 
  реализуются во всех устройствах, подключенных к сети. Со стороны компьютера 
  функции физического уровня выполняются сетевым адаптером или последовательным 
  портом.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Примером протокола физического уровня 
  может служить спецификация 10Base-T технологии Ethernet, которая определяет в 
  качестве используемого кабеля неэкранированную витую пару категории 3 с 
  волновым сопротивлением 100 Ом, разъем RJ-45, максимальную длину физического 
  сегмента 100 метров, манчестерский код для представления данных на кабеле, и 
  другие характеристики среды и электрических сигналов.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Канальный уровень.</I> На физическом 
  уровне просто пересылаются биты. При этом не учитывается, что в некоторых 
  сетях, в которых линии связи используются (разделяются) попеременно 
  несколькими парами взаимодействующих компьютеров, физическая среда передачи 
  может быть занята. Поэтому одной из задач канального уровня является проверка 
  доступности среды передачи. Другой задачей канального уровня является 
  реализация механизмов обнаружения и коррекции ошибок. Для этого на канальном 
  уровне биты группируются в наборы, называемые кадрами (frames). Канальный 
  уровень обеспечивает корректность передачи каждого кадра, помещая специальную 
  последовательность бит в начало и конец каждого кадра, чтобы отметить его, а 
  также вычисляет контрольную сумму, суммируя все байты кадра определенным 
  способом и добавляя контрольную сумму к кадру. Когда кадр приходит, получатель 
  снова вычисляет контрольную сумму полученных данных и сравнивает результат с 
  контрольной суммой из кадра. Если они совпадают, кадр считается правильным и 
  принимается. Если же контрольные суммы не совпадают, то фиксируется 
  ошибка.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В протоколах канального уровня, 
  используемых в локальных сетях, заложена определенная структура связей между 
  компьютерами и способы их адресации. Хотя канальный уровень и обеспечивает 
  доставку кадра между любыми двумя узлами локальной сети, он это делает только 
  в сети с совершенно определенной топологией связей, именно той топологией, для 
  которой он был разработан. К таким типовым топологиям, поддерживаемым 
  протоколами канального уровня локальных сетей, относятся общая шина, кольцо и 
  звезда. Примерами протоколов канального уровня являются протоколы Ethernet, 
  Token Ring, FDDI, 100VG-AnyLAN.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В локальных сетях протоколы 
  канального уровня используются компьютерами, мостами, коммутаторами и 
  маршрутизаторами. В компьютерах функции канального уровня реализуются 
  совместными усилиями сетевых адаптеров и их драйверов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В глобальных сетях, которые редко 
  обладают регулярной топологией, канальный уровень обеспечивает обмен 
  сообщениями между двумя соседними компьютерами, соединенными индивидуальной 
  линией связи. Примерами протоколов "точка - точка" (как часто называют такие 
  протоколы) могут служить широко распространенные протоколы PPP и 
  LAP-B.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Сетевой уровень.</I> Этот уровень 
  служит для образования единой транспортной системы, объединяющей несколько 
  сетей с различными принципами передачи информации между конечными узлами. 
  Рассмотрим функции сетевого уровня на примере локальных сетей. Протокол 
  канального уровня локальных сетей обеспечивает доставку данных между любыми 
  узлами только в сети с соответствующей <I>типовой топологией</I>. Это очень 
  жесткое ограничение, которое не позволяет строить сети с развитой структурой, 
  например, сети, объединяющие несколько сетей предприятия в единую сеть, или 
  высоконадежные сети, в которых существуют избыточные связи между узлами. Для 
  того, чтобы, с одной стороны, сохранить простоту процедур передачи данных для 
  типовых топологий, а с другой стороны, допустить использование произвольных 
  топологий, используется дополнительный сетевой уровень. На этом уровне 
  вводится понятие "сеть". В данном случае под сетью понимается совокупность 
  компьютеров, соединенных между собой в соответствии с одной из стандартных 
  типовых топологий и использующих для передачи данных один из протоколов 
  канального уровня, определенный для этой топологии.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Таким образом, внутри сети доставка 
  данных регулируется канальным уровнем, а вот доставкой данных между сетями 
  занимается сетевой уровень.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Сообщения сетевого уровня принято 
  называть <I>пакетами (packets)</I>. При организации доставки пакетов на 
  сетевом уровне используется понятие <I>"номер сети"</I>. В этом случае адрес 
  получателя состоит из номера сети и номера компьютера в этой сети.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Сети соединяются между собой 
  специальными устройствами, называемыми маршрутизаторами. <I>Маршрутизатор</I> 
  - это устройство, которое собирает информацию о топологии межсетевых 
  соединений и на ее основании пересылает пакеты сетевого уровня в сеть 
  назначения. Для того, чтобы передать сообщение от отправителя, находящегося в 
  одной сети, получателю, находящемуся в другой сети, нужно совершить некоторое 
  количество транзитных передач (hops) между сетями, каждый раз выбирая 
  подходящий маршрут. Таким образом, маршрут представляет собой 
  последовательность маршрутизаторов, через которые проходит пакет.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Проблема выбора наилучшего пути 
  называется <I>маршрутизацией</I> и ее решение является главной задачей 
  сетевого уровня. Эта проблема осложняется тем, что самый короткий путь не 
  всегда самый лучший. Часто критерием при выборе маршрута является время 
  передачи данных по этому маршруту, оно зависит от пропускной способности 
  каналов связи и интенсивности трафика, которая может изменяться с течением 
  времени. Некоторые алгоритмы маршрутизации пытаются приспособиться к изменению 
  нагрузки, в то время, как другие принимают решения на основе средних 
  показателей за длительное время. Выбор маршрута может осуществляться и по 
  другим критериям, например, надежности передачи.</FONT></P>
  <P align=justify><FONT face=Arial size=2>На сетевом уровне определяется два 
  вида протоколов. Первый вид относится к определению правил передачи пакетов с 
  данными конечных узлов от узла к маршрутизатору и между маршрутизаторами. 
  Именно эти протоколы обычно имеют в виду, когда говорят о протоколах сетевого 
  уровня. К сетевому уровню относят и другой вид протоколов, называемых 
  <I>протоколами обмена маршрутной информацией</I>. С помощью этих протоколов 
  маршрутизаторы собирают информацию о топологии межсетевых соединений. 
  Протоколы сетевого уровня реализуются программными модулями операционной 
  системы, а также программными и аппаратными средствами 
  маршрутизаторов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Примерами протоколов сетевого уровня 
  являются протокол межсетевого взаимодействия IP стека TCP/IP и протокол 
  межсетевого обмена пакетами IPX стека Novell.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Транспортный уровень.</I> На пути от 
  отправителя к получателю пакеты могут быть искажены или утеряны. Хотя 
  некоторые приложения имеют собственные средства обработки ошибок, существуют и 
  такие, которые предпочитают сразу иметь дело с надежным соединением. Работа 
  транспортного уровня заключается в том, чтобы обеспечить приложениям или 
  верхним уровням стека - прикладному и сеансовому - передачу данных с той 
  степенью надежности, которая им требуется. Модель OSI определяет пять классов 
  сервиса, предоставляемых транспортным уровнем. Эти виды сервиса отличаются 
  качеством предоставляемых услуг: срочностью, возможностью восстановления 
  прерванной связи, наличием средств мультиплексирования нескольких соединений 
  между различными прикладными протоколами через общий транспортный протокол, а 
  главное - способностью к обнаружению и исправлению ошибок передачи, таких как 
  искажение, потеря и дублирование пакетов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Выбор класса сервиса транспортного 
  уровня определяется, с одной стороны, тем, в какой степени задача обеспечения 
  надежности решается самими приложениями и протоколами более высоких, чем 
  транспортный, уровней, а с другой стороны, этот выбор зависит от того, 
  насколько надежной является вся система транспортировки данных в сети. Так, 
  например, если качество каналов передачи связи очень высокое, и вероятность 
  возникновения ошибок, не обнаруженных протоколами более низких уровней, 
  невелика, то разумно воспользоваться одним из облегченных сервисов 
  транспортного уровня, не обремененных многочисленными проверками, 
  квитированием и другими приемами повышения надежности. Если же транспортные 
  средства изначально очень ненадежны, то целесообразно обратиться к наиболее 
  развитому сервису транспортного уровня, который работает, используя максимум 
  средств для обнаружения и устранения ошибок - с помощью предварительного 
  установления логического соединения, контроля доставки сообщений с помощью 
  контрольных сумм и циклической нумерации пакетов, установления тайм-аутов 
  доставки и т.п.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Как правило, все протоколы, начиная с 
  транспортного уровня и выше, реализуются программными средствами конечных 
  узлов сети - компонентами их сетевых операционных систем. В качестве примера 
  транспортных протоколов можно привести протоколы TCP и UDP стека TCP/IP и 
  протокол SPX стека Novell.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Сеансовый уровень.</I> Сеансовый 
  уровень обеспечивает управление диалогом для того, чтобы фиксировать, какая из 
  сторон является активной в настоящий момент, а также предоставляет средства 
  синхронизации. Последние позволяют вставлять контрольные точки в длинные 
  передачи, чтобы в случае отказа можно было вернуться назад к последней 
  контрольной точке, вместо того, чтобы начинать все с начала. На практике 
  немногие приложения используют сеансовый уровень, и он редко 
  реализуется.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Уровень представления.</I> Этот 
  уровень обеспечивает гарантию того, что информация, передаваемая прикладным 
  уровнем, будет понятна прикладному уровню в другой системе. При необходимости 
  уровень представления выполняет преобразование форматов данных в некоторый 
  общий формат представления, а на приеме, соответственно, выполняет обратное 
  преобразование. Таким образом, прикладные уровни могут преодолеть, например, 
  синтаксические различия в представлении данных. На этом уровне может 
  выполняться шифрование и дешифрование данных, благодаря которому секретность 
  обмена данными обеспечивается сразу для всех прикладных сервисов. Примером 
  протокола, работающего на уровне представления, является протокол Secure 
  Socket Layer (SSL), который обеспечивает секретный обмен сообщениями для 
  протоколов прикладного уровня стека TCP/IP.</FONT></P><I>
  <P align=justify><FONT face=Arial size=2>Прикладной уровень.</I> Прикладной 
  уровень - это в действительности просто набор разнообразных протоколов, с 
  помощью которых пользователи сети получают доступ к разделяемым ресурсам, 
  таким как файлы, принтеры или гипертекстовые Web-страницы, а также организуют 
  свою совместную работу, например, с помощью протокола электронной почты. 
  Единица данных, которой оперирует прикладной уровень, обычно называется 
  <I>сообщением (message)</I></FONT><FONT size=2><FONT 
  face=Arial>.</FONT></P></FONT>
  <P align=justify><FONT face=Arial size=2>Существует очень большое разнообразие 
  протоколов прикладного уровня. Приведем в качестве примеров хотя бы несколько 
  наиболее распространенных реализаций файловых сервисов: NCP в операционной 
  системе Novell NetWare, SMB в Microsoft Windows NT, NFS, FTP и TFTP, входящие 
  в стек TCP/IP.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Модель OSI представляет хотя и очень 
  важную, но только одну из многих моделей коммуникаций. Эти модели и связанные 
  с ними стеки протоколов могут отличаться количеством уровней, их функциями, 
  форматами сообщений, сервисами, предоставляемыми на верхних уровнях и прочими 
  параметрами.</FONT></P>
  <H3><FONT face=Arial>Характеристика популярных стеков коммуникационных 
  протоколов</FONT></H3>
  <P align=justify><FONT face=Arial size=2>Итак, взаимодействие компьютеров в 
  сетях происходит в соответствии с определенными правилами обмена сообщениями и 
  их форматами, то есть в соответствии с определенными протоколами. Иерархически 
  организованная совокупность протоколов, решающих задачу взаимодействия узлов 
  сети, называется стеком коммуникационных протоколов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Существует достаточно много стеков 
  протоколов, широко применяемых в сетях. Это и стеки, являющиеся международными 
  и национальными стандартами, и фирменные стеки, получившие распространение 
  благодаря распространенности оборудования той или иной фирмы. Примерами 
  популярных стеков протоколов могут служить стек IPX/SPX фирмы Novell, стек 
  TCP/IP, используемый в сети Internet и во многих сетях на основе операционной 
  системы UNIX, стек OSI международной организации по стандартизации, стек 
  DECnet корпорации Digital Equipment и некоторые другие.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Использование в сети того или иного 
  стека коммуникационных протоколов во многом определяет лицо сети и ее 
  характеристики. В небольших сетях может использоваться исключительно один 
  стек. В крупных корпоративных сетях, объединяющих различные сети, параллельно 
  используются, как правило, несколько стеков.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В коммуникационном оборудовании 
  реализуются протоколы нижних уровней, которые в большей степени 
  стандартизованы, чем протоколы верхних уровней, и это является предпосылкой 
  для успешной совместной работы оборудования различных производителей. Перечень 
  протоколов, поддерживаемых тем или иным коммуникационным устройством, является 
  одной из наиболее важных характеристик этого устройства.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Компьютеры реализуют коммуникационные 
  протоколы в виде соответствующих программных элементов сетевой операционной 
  системы, например, протоколы канального уровня, как правило, выполнены в виде 
  драйверов сетевых адаптеров, а протоколы верхних уровней в виде серверных и 
  клиентских компонент сетевых сервисов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Умение хорошо работать в среде той 
  или иной операционной системы является важной характеристикой 
  коммуникационного оборудования. Часто можно прочитать в рекламе сетевого 
  адаптера или концентратора, что он разрабатывался специально для работы в сети 
  NetWare или UNIX. Это означает, что разработчики аппаратуры оптимизировали ее 
  характеристики применительно к тем протоколам, которые используются в этой 
  сетевой операционной системе, или к данной версии их реализации, если эти 
  протоколы используются в различных ОС. Из-за особенностей реализации 
  протоколов в различных ОС, в качестве одной из характеристик коммуникационного 
  оборудования используется его сертифицированность на возможность работы в 
  среде данной ОС.</FONT></P>
  <P align=justify><FONT face=Arial size=2>На нижних уровнях - физическом и 
  канальном - практически во всех стеках используются одни и те же протоколы. 
  Это хорошо стандартизованные протоколы Ethernet, Token Ring, FDDI и некоторые 
  другие, которые позволяют использовать во всех сетях одну и ту же 
  аппаратуру.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протоколы сетевого и более высоких 
  уровней существующих стандартных стеков отличаются большим разнообразием и, 
  как правило, не соответствуют рекомендуемому моделью ISO разбиению на уровни. 
  В частности, в этих стеках функции сеансового и представительного уровня чаще 
  всего объединены с прикладным уровнем. Такое несоответствие связано с тем, что 
  модель ISO появилась как результат обобщения уже существующих и реально 
  используемых стеков, а не наоборот.</FONT></P>
  <H4><FONT face=Arial>Стек OSI</FONT></H4>
  <P align=justify><FONT face=Arial size=2>Следует различать стек протоколов OSI 
  и модель OSI. В то время, как модель OSI концептуально определяет процедуру 
  взаимодействия открытых систем, декомпозируя задачу на 7 уровней, 
  стандартизирует назначение каждого уровня и вводит стандартные названия 
  уровней, стек OSI - это набор вполне конкретных спецификаций протоколов, 
  образующих согласованный стек протоколов. Этот стек протоколов поддерживает 
  правительство США в своей программе GOSIP. Все компьютерные сети, 
  устанавливаемые в правительственных учреждениях после 1990 года, должны либо 
  непосредственно поддерживать стек OSI, либо обеспечивать средства для перехода 
  на этот стек в будущем. Тем не менее, стек OSI более популярен в Европе, а не 
  в США, так как в Европе меньше установлено старых сетей, использующих свои 
  собственные протоколы. В Европе также ощущается большая потребность в общем 
  стеке, так как здесь имеется большое количество разных стран.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Это международный, независимый от 
  производителей стандарт. Он может обеспечить взаимодействие между 
  корпорациями, партнерами и поставщиками. Это взаимодействие осложняется из-за 
  проблем с адресацией, именованием и безопасностью данных. Все эти проблемы в 
  стеке OSI частично решены. Протоколы OSI требуют больших затрат вычислительной 
  мощности центрального процессора, что делает их более подходящими для мощных 
  машин, а не для сетей персональных компьютеров. Большинство организаций пока 
  только планируют переход к стеку OSI. Из тех, кто работает в этом направлении, 
  можно назвать Военно-морское ведомство США и сеть NFSNET. Одним из крупнейших 
  производителей, поддерживающих OSI, является компания AT&amp;T. Ее сеть 
  Stargroup полностью базируется на стеке OSI.</FONT></P>
  <P align=justify><FONT face=Arial size=2>По вполне очевидным причинам стек OSI 
  в отличие от других стандартных стеков полностью соответствует модели 
  взаимодействия OSI, он включает спецификации для всех семи уровней модели 
  взаимодействия открытых систем (рис. 1.3).</FONT></P><FONT size=2>
  <P><FONT face=Arial>&nbsp;</FONT></FONT><I><FONT face=Arial size=2><IMG 
  border=0 height=352 src="Модель ISO_OSI.files/sr01104b.gif" 
  width=454></FONT></I></P>
  <P><I><FONT face=Arial size=2>Рис. 1.3. Стек OSI</FONT></I><FONT 
  size=2></P></FONT>
  <P align=justify><FONT face=Arial size=2>На <B><I>физическом и канальном 
  уровнях</I></B> стек OSI поддерживает протоколы Ethernet, Token Ring, FDDI, а 
  также протоколы LLC, X.25 и ISDN. Эти протоколы будут подробно обсуждены в 
  других разделах пособия.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Сервисы <I><B>сетевого, транспортного 
  и сеансового </B>уровней</I> также имеются в стеке OSI, однако они мало 
  распространены. На сетевом уровне реализованы протоколы как без установления 
  соединений, так и с установлением соединений. Транспортный протокол стека OSI 
  в соответствии с функциями, определенными для него в модели OSI, скрывает 
  различия между сетевыми сервисами с установлением соединения и без 
  установления соединения, так что пользователи получают нужное качество 
  обслуживания независимо от нижележащего сетевого уровня. Чтобы обеспечить это, 
  транспортный уровень требует, чтобы пользователь задал нужное качество 
  обслуживания. Определены 5 классов транспортного сервиса, от низшего класса 0 
  до высшего класса 4, которые отличаются степенью устойчивости к ошибкам и 
  требованиями к восстановлению данных после ошибок.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Сервисы <B><I>прикладного 
  уровня</I></B> включают передачу файлов, эмуляцию терминала, службу каталогов 
  и почту. Из них наиболее перспективными являются служба каталогов (стандарт 
  Х.500), электронная почта (Х.400), протокол виртуального терминала (VT), 
  протокол передачи, доступа и управления файлами (FTAM), протокол пересылки и 
  управления работами (JTM). В последнее время ISO сконцентрировала свои усилия 
  именно на сервисах верхнего уровня.</FONT></P><B><I><FONT size=2>
  <P align=justify><FONT face=Arial>X.400</FONT></FONT></I></B><FONT face=Arial 
  size=2> - это семейство рекомендаций Международного консультативного комитета 
  по телеграфии и телефонии (CCITT), в которых описываются системы пересылки 
  электронных сообщений. На сегодняшний день рекомендации X.400 являются 
  наиболее популярным протоколом обмена сообщениями. Рекомендации Х.400 
  описывают модель системы обмена сообщениями, протоколы взаимодействия между 
  всеми компонентами этой системы, а также множество видов сообщений и 
  возможности, которыми обладает отправитель по каждому виду отправляемых 
  сообщений.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Рекомендации X.400 определяют 
  следующий минимально необходимый набор услуг, предоставляемых пользователям: 
  управление доступом, ведение уникальных системных идентификаторов сообщений, 
  извещение о доставке или недоставке сообщения с указанием причины, индикация 
  типа содержания сообщения, индикация преобразования содержания сообщения, 
  временные отметки при передаче и доставке, выбор категории доставки (срочная, 
  несрочная, нормальная), многоадресная доставка, задержанная доставка (до 
  определенного момента времени), преобразование содержимого для взаимодействия 
  с несовместимыми почтовыми системами, например, со службами телексной и 
  факсимильной связей, запрос о том, доставлено ли конкретное сообщение, списки 
  рассылки, которые могут иметь вложенную структуру, средства защиты сообщений 
  от несанкционированного доступа, базирующиеся на асимметричной криптосистеме 
  публичных ключей.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Целью рекомендаций <B>X.500</B> 
  является выработка стандартов глобальной справочной службы. Процесс доставки 
  сообщения требует знания адреса получателя, что при больших размерах сетей 
  представляет собой проблему, поэтому необходимо иметь справочную службу, 
  помогающую получать адреса отправителей и получателей. В общем виде служба 
  X.500 представляет собой распределенную базу данных имен и адресов. Все 
  пользователи потенциально имеют право войти в эту базу данных, используя 
  определенный набор атрибутов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Над базой данных имен и адресов 
  определены следующие операции:</FONT></P>
  <UL>
    <LI><FONT face=Arial size=2>чтение - получение адреса по известному 
    имени,</FONT> 
    <LI><FONT face=Arial size=2>запрос - получение имени по известным атрибутам 
    адреса,</FONT> 
    <LI><FONT face=Arial size=2>модификация, включающая удаление и добавление 
    записей в базе данных.</FONT> </LI></UL>
  <P align=justify><FONT face=Arial size=2>Основные проблемы реализации 
  рекомендаций X.500 проистекают из масштабности этого проекта, претендующего на 
  роль всемирной справочной службы. Поэтому программное обеспечение, реализующее 
  рекомендации X.500, получается весьма громоздким и предъявляет высокие 
  требования к производительности аппаратуры.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Учет рекомендаций Х.400 и X.500 при 
  проектировании систем электронной почты делает принципиально возможной и 
  концептуально простой стыковку почтовых систем разных 
  производителей.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол <B>VT</B> решает проблему 
  несовместимости различных протоколов эмуляции терминалов. Сейчас пользователю 
  персонального компьютера, совместимого с IBM PC, для одновременной работы с 
  компьютерами VAX, IBM 3090 и HP9000 нужно приобрести три различные программы 
  для эмуляции терминалов различных типов и использующих разные протоколы. Если 
  бы каждый хост-компьютер имел бы в своем составе программное обеспечение 
  протокола эмуляции терминала ISO, то и пользователю бы понадобилась только 
  одна программа, поддерживающая протокол VT. В своем стандарте ISO 
  аккумулировала широко распространенные функции эмуляции терминалов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Передача файлов - это наиболее 
  распространенный компьютерный сервис. Доступ к файлам, как к локальным, так и 
  к удаленным, нужен всем приложениям - текстовым редакторам, электронной почте, 
  базам данных или программам удаленного запуска. ISO предусматривает такой 
  сервис в протоколе <B>FTAM</B>. Наряду со стандартом X.400, это наиболее 
  популярный стандарт стека OSI. FTAM предусматривает средства для локализации и 
  доступа к содержимому файла и включает набор директив для вставки, замены, 
  расширения и очистки содержимого файла. FTAM также предусматривает средства 
  для манипулирования файлом как единым целым, включая создание, удаление, 
  чтение, открытие, закрытие файла и выбор его атрибутов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол пересылки и управления 
  работами <B>JTM</B> позволяет пользователям пересылать работы, которые должны 
  быть выполнены на хост-компьютере. Язык управления заданиями, который 
  обеспечивает передачу работ, указывает хост-компьютеру, какие действия и с 
  какими программами и файлами должны быть выполнены. Протокол JTM поддерживает 
  традиционную пакетную обработку, обработку транзакций, ввод удаленных заданий 
  и доступ к распределенным базам данных.</FONT></P>
  <H4><FONT face=Arial>Стек TCP/IP</FONT></H4>
  <P align=justify><FONT face=Arial size=2>Стек TCP/IP, называемый также стеком 
  DoD и стеком Internet, является одним из наиболее популярных и перспективных 
  стеков коммуникационных протоколов. Если в настоящее время он распространен в 
  основном в сетях с ОС UNIX, то реализация его в последних версиях сетевых 
  операционных систем для персональных компьютеров (Windows NT, NetWare ) 
  является хорошей предпосылкой для быстрого роста числа установок стека 
  TCP/IP.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Стек был разработан по инициативе 
  Министерства обороны США (Department of Defence, DoD) более 20 лет назад для 
  связи экспериментальной сети ARPAnet с другими сателлитными сетями как набор 
  общих протоколов для разнородной вычислительной среды. Сеть ARPA поддерживала 
  разработчиков и исследователей в военных областях. В сети ARPA связь между 
  двумя компьютерами осуществлялась с использованием протокола Internet Protocol 
  (IP), который и по сей день является одним из основных в стеке TCP/IP и 
  фигурирует в названии стека.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Большой вклад в развитие стека TCP/IP 
  внес университет Беркли, реализовав протоколы стека в своей версии ОС UNIX. 
  Широкое распространение ОС UNIX привело и к широкому распространению протокола 
  IP и других протоколов стека. На этом же стеке работает всемирная 
  информационная сеть Internet, чье подразделение Internet Engineering Task 
  Force (IETF) вносит основной вклад в совершенствование стандартов стека, 
  публикуемых в форме спецификаций RFC.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Так как стек TCP/IP был разработан до 
  появления модели взаимодействия открытых систем ISO/OSI, то, хотя он также 
  имеет многоуровневую структуру, соответствие уровней стека TCP/IP уровням 
  модели OSI достаточно условно.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Структура протоколов TCP/IP приведена 
  на рисунке 1.4. Протоколы TCP/IP делятся на 4 уровня.</FONT></P><FONT size=2>
  <P><IMG border=0 height=342 src="Модель ISO_OSI.files/sr01104c.gif" 
  width=530></P></FONT><I>
  <P align=left><FONT face=Arial size=2>Рис. 1.4. Стек TCP / IP</FONT></I><FONT 
  size=2></P></FONT>
  <P align=justify><FONT face=Arial size=2>Самый нижний (<B><I>уровень 
  IV</I></B>) - уровень межсетевых интерфейсов - соответствует физическому и 
  канальному уровням модели OSI. Этот уровень в протоколах TCP/IP не 
  регламентируется, но поддерживает все популярные стандарты физического и 
  канального уровня: для локальных каналов это Ethernet, Token Ring, FDDI, для 
  глобальных каналов - собственные протоколы работы на аналоговых коммутируемых 
  и выделенных линиях SLIP/PPP, которые устанавливают соединения типа "точка - 
  точка" через последовательные каналы глобальных сетей, и протоколы 
  территориальных сетей X.25 и ISDN. Разработана также специальная спецификация, 
  определяющая использование технологии ATM в качестве транспорта канального 
  уровня.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Следующий уровень (<B><I>уровень 
  III</I></B>) - это уровень межсетевого взаимодействия, который занимается 
  передачей дейтаграмм с использованием различных локальных сетей, 
  территориальных сетей X.25, линий специальной связи и т. п. В качестве 
  основного протокола сетевого уровня (в терминах модели OSI) в стеке 
  используется протокол <B>IP</B>, который изначально проектировался как 
  протокол передачи пакетов в составных сетях, состоящих из большого количества 
  локальных сетей, объединенных как локальными, так и глобальными связями. 
  Поэтому протокол IP хорошо работает в сетях со сложной топологией, рационально 
  используя наличие в них подсистем и экономно расходуя пропускную способность 
  низкоскоростных линий связи. Протокол IP является дейтаграммным 
  протоколом.</FONT></P>
  <P align=justify><FONT face=Arial size=2>К уровню межсетевого взаимодействия 
  относятся и все протоколы, связанные с составлением и модификацией таблиц 
  маршрутизации, такие как протоколы сбора маршрутной информации <B>RIP</B> 
  (Routing Internet Protocol) и <B>OSPF</B> (Open Shortest Path First), а также 
  протокол межсетевых управляющих сообщений <B>ICMP</B> (Internet Control 
  Message Protocol). Последний протокол предназначен для обмена информацией об 
  ошибках между маршрутизатором и шлюзом, системой-источником и 
  системой-приемником, то есть для организации обратной связи. С помощью 
  специальных пакетов ICMP сообщается о невозможности доставки пакета, о 
  превышении времени жизни или продолжительности сборки пакета из фрагментов, об 
  аномальных величинах параметров, об изменении маршрута пересылки и типа 
  обслуживания, о состоянии системы и т.п.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Следующий уровень (<B>уровень II</B>) 
  называется основным. На этом уровне функционируют протокол управления 
  передачей <B>TCP</B> (Transmission Control Protocol) и протокол дейтаграмм 
  пользователя <B>UDP</B> (User Datagram Protocol). Протокол TCP обеспечивает 
  устойчивое виртуальное соединение между удаленными прикладными процессами. 
  Протокол UDP обеспечивает передачу прикладных пакетов дейтаграммным методом, 
  то есть без установления виртуального соединения, и поэтому требует меньших 
  накладных расходов, чем TCP.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Верхний уровень (<B>уровень I</B>) 
  называется прикладным. За долгие годы использования в сетях различных стран и 
  организаций стек TCP/IP накопил большое количество протоколов и сервисов 
  прикладного уровня. К ним относятся такие широко используемые протоколы, как 
  протокол копирования файлов FTP, протокол эмуляции терминала telnet, почтовый 
  протокол SMTP, используемый в электронной почте сети Internet и ее российской 
  ветви РЕЛКОМ, гипертекстовые сервисы доступа к удаленной информации, такие как 
  WWW и многие другие. Остановимся несколько подробнее на некоторых из них, 
  наиболее тесно связанных с тематикой данного курса.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол <B>SNMP</B> (Simple Network 
  Management Protocol) используется для организации сетевого управления. 
  Проблема управления разделяется здесь на две задачи. Первая задача связана с 
  передачей информации. Протоколы передачи управляющей информации определяют 
  процедуру взаимодействия сервера с программой-клиентом, работающей на хосте 
  администратора. Они определяют форматы сообщений, которыми обмениваются 
  клиенты и серверы, а также форматы имен и адресов. Вторая задача связана с 
  контролируемыми данными. Стандарты регламентируют, какие данные должны 
  сохраняться и накапливаться в шлюзах, имена этих данных и синтаксис этих имен. 
  В стандарте SNMP определена спецификация информационной базы данных управления 
  сетью. Эта спецификация, известная как база данных MIB (Management Information 
  Base), определяет те элементы данных, которые хост или шлюз должен сохранять, 
  и допустимые операции над ними.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол пересылки файлов <B>FTP</B> 
  (File Transfer Protocol) реализует удаленный доступ к файлу. Для того, чтобы 
  обеспечить надежную передачу, FTP использует в качестве транспорта протокол с 
  установлением соединений - TCP. Кроме пересылки файлов протокол, FTP 
  предлагает и другие услуги. Так пользователю предоставляется возможность 
  интерактивной работы с удаленной машиной, например, он может распечатать 
  содержимое ее каталогов, FTP позволяет пользователю указывать тип и формат 
  запоминаемых данных. Наконец, FTP выполняет аутентификацию пользователей. 
  Прежде, чем получить доступ к файлу, в соответствии с протоколом пользователи 
  должны сообщить свое имя и пароль.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В стеке TCP/IP протокол FTP 
  предлагает наиболее широкий набор услуг для работы с файлами, однако он 
  является и самым сложным для программирования. Приложения, которым не 
  требуются все возможности FTP, могут использовать другой, более экономичный 
  протокол - простейший протокол пересылки файлов <B>TFTP</B> (Trivial File 
  Transfer Protocol). Этот протокол реализует только передачу файлов, причем в 
  качестве транспорта используется более простой, чем TCP, протокол без 
  установления соединения - UDP.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол <B>telnet</B> обеспечивает 
  передачу потока байтов между процессами, а также между процессом и терминалом. 
  Наиболее часто этот протокол используется для эмуляции терминала удаленной 
  ЭВМ.</FONT></P>
  <H4><FONT face=Arial>Стек IPX/SPX</FONT></H4>
  <P align=justify><FONT face=Arial size=2>Этот стек является оригинальным 
  стеком протоколов фирмы Novell, который она разработала для своей сетевой 
  операционной системы NetWare еще в начале 80-х годов. Протоколы Internetwork 
  Packet Exchange (IPX) и Sequenced Packet Exchange (SPX), которые дали имя 
  стеку, являются прямой адаптацией протоколов XNS фирмы Xerox, распространенных 
  в гораздо меньше степени, чем IPX/SPX. По количеству установок протоколы 
  IPX/SPX лидируют, и это обусловлено тем, что сама ОС NetWare занимает 
  лидирующее положение с долей установок в мировом масштабе примерно в 
  65%.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Семейство протоколов фирмы Novell и 
  их соответствие модели ISO/OSI представлено на рисунке 1.5.</FONT></P>
  <P align=left><IMG border=0 height=326 src="Модель ISO_OSI.files/sr01104d.gif" 
  width=348></P>
  <P align=left><FONT face=Arial size=2>Рис. 1.5. Стек IPX / SPX</FONT></P>
  <P align=justify><FONT face=Arial size=2>На <B><I>физическом и канальном 
  уровнях </I></B>в сетях Novell используются все популярные протоколы этих 
  уровней (Ethernet, Token Ring, FDDI и другие).</FONT></P>
  <P align=justify><FONT face=Arial size=2>На <B><I>сетевом уровне</I></B> в 
  стеке Novell работает протокол <B>IPX</B>, а также протоколы обмена маршрутной 
  информацией <B>RIP</B> и <B>NLSP</B> (аналог протокола OSPF стека TCP/IP). IPX 
  является протоколом, который занимается вопросами адресации и маршрутизации 
  пакетов в сетях Novell. Маршрутные решения IPX основаны на адресных полях в 
  заголовке его пакета, а также на информации, поступающей от протоколов обмена 
  маршрутной информацией. Например, IPX использует информацию, поставляемую либо 
  протоколом RIP, либо протоколом NLSP (NetWare Link State Protocol) для 
  передачи пакетов компьютеру назначения или следующему маршрутизатору. Протокол 
  IPX поддерживает только дейтаграммный способ обмена сообщениями, за счет чего 
  экономно потребляет вычислительные ресурсы. Итак, протокол IPX обеспечивает 
  выполнение трех функций: задание адреса, установление маршрута и рассылку 
  дейтаграмм.</FONT></P><B>
  <P align=justify><FONT face=Arial size=2>Транспортному уровню</B> модели OSI в 
  стеке Novell соответствует протокол SPX, который осуществляет передачу 
  сообщений с установлением соединений.</FONT></P>
  <P align=justify><FONT face=Arial size=2>На верхних <B>прикладном, 
  представительном и сеансовом уровнях</B> работают протоколы NCP и SAP. 
  Протокол <B>NCP</B> (NetWare Core Protocol) является протоколом взаимодействия 
  сервера NetWare и оболочки рабочей станции. Этот протокол прикладного уровня 
  реализует архитектуру клиент-сервер на верхних уровнях модели OSI. С помощью 
  функций этого протокола рабочая станция производит подключение к серверу, 
  отображает каталоги сервера на локальные буквы дисководов, просматривает 
  файловую систему сервера, копирует удаленные файлы, изменяет их атрибуты и 
  т.п., а также осуществляет разделение сетевого принтера между рабочими 
  станциями.</FONT></P><B><FONT size=2>
  <P align=justify><FONT face=Arial>SAP</FONT></FONT></B><FONT face=Arial 
  size=2> (Service Advertising Protocol) - протокол объявления о сервисе - 
  концептуально подобен протоколу RIP. Подобно тому, как протокол RIP позволяет 
  маршрутизаторам обмениваться маршрутной информацией, протокол SAP дает 
  возможность сетевым устройствам обмениваться информацией об имеющихся сетевых 
  сервисах.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Серверы и маршрутизаторы используют 
  SAP для объявления о своих сервисных услугах и сетевых адресах. Протокол SAP 
  позволяет сетевым устройствам постоянно корректировать данные о том, какие 
  сервисные услуги имеются сейчас в сети. При старте серверы используют SAP для 
  оповещения оставшейся части сети о своих услугах. Когда сервер завершает 
  работу, то он использует SAP для того, чтобы известить сеть о прекращении 
  действия своих услуг.</FONT></P>
  <P align=justify><FONT face=Arial size=2>В сетях Novell серверы NetWare 3.x 
  каждую минуту рассылают широковещательные пакеты SAP. Пакеты SAP в 
  значительной степени засоряют сеть, поэтому одной из основных задач 
  маршрутизаторов, выходящих на глобальные связи, является фильтрация трафика 
  SAP-пакетов и RIP-пакетов.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Особенности стека IPX/SPX обусловлены 
  особенностями ОС NetWare, а именно ориентацией ее ранних версий (до 4.0) на 
  работу в локальных сетях небольших размеров, состоящих из персональных 
  компьютеров со скромными ресурсами. Поэтому Novell нужны были протоколы, на 
  реализацию которых требовалось минимальное количество оперативной памяти 
  (ограниченной в IBM-совместимых компьютерах под управлением MS-DOS 640 
  Кбайтами) и которые бы быстро работали на процессорах небольшой вычислительной 
  мощности. В результате, протоколы стека IPX/SPX до недавнего времени хорошо 
  работали в локальных сетях и не очень - в больших корпоративных сетях, так как 
  слишком перегружали медленные глобальные связи широковещательными пакетами, 
  которые интенсивно используются несколькими протоколами этого стека (например, 
  для установления связи между клиентами и серверами).</FONT></P>
  <P align=justify><FONT face=Arial size=2>Это обстоятельство, а также тот факт, 
  что стек IPX/SPX является собственностью фирмы Novell и на его реализацию 
  нужно получать у нее лицензию, долгое время ограничивали распространенность 
  его только сетями NetWare. Однако к моменту выпуска версии NetWare 4.0, Novell 
  внесла и продолжает вносить в свои протоколы серьезные изменения, направленные 
  на приспособление их для работы в корпоративных сетях. Сейчас стек IPX/SPX 
  реализован не только в NetWare, но и в нескольких других популярных сетевых ОС 
  - SCO UNIX, Sun Solaris, Microsoft Windows NT.</FONT></P>
  <H4><FONT face=Arial>Стек NetBIOS/SMB</FONT></H4>
  <P align=justify><FONT size=2><FONT face=Arial>Фирмы Microsoft и IBM совместно 
  работали над сетевыми средствами для персональных компьютеров, поэтому стек 
  протоколов NetBIOS/SMB является их совместным детищем. Средства NetBIOS 
  появились в 1984 году как сетевое расширение стандартных функций базовой 
  системы ввода/вывода (BIOS) IBM PC для сетевой программы PC Network фирмы IBM, 
  которая на прикладном уровне (рис. 1.6) использовала для реализации сетевых 
  сервисов протокол SMB (Server Message Block).</FONT></P>
  <P><IMG border=0 height=333 src="Модель ISO_OSI.files/sr01104e.gif" 
  width=362></P></FONT><I>
  <P align=left><FONT face=Arial size=2>Рис. 1.6. Стек NetBIOS / 
  SMB</FONT></I><FONT size=2></P></FONT>
  <P align=justify><FONT face=Arial size=2>Протокол <B>NetBIOS</B> работает на 
  трех уровнях модели взаимодействия открытых систем: <B>сетевом, транспортном и 
  сеансовом</B>. NetBIOS может обеспечить сервис более высокого уровня, чем 
  протоколы IPX и SPX, однако не обладает способностью к маршрутизации. Таким 
  образом, NetBIOS не является сетевым протоколом в строгом смысле этого слова. 
  NetBIOS содержит много полезных сетевых функций, которые можно отнести к 
  сетевому, транспортному и сеансовому уровням, однако с его помощью невозможна 
  маршрутизация пакетов, так как в протоколе обмена кадрами NetBIOS не вводится 
  такое понятие как сеть. Это ограничивает применение протокола NetBIOS 
  локальными сетями, не разделенными на подсети. NetBIOS поддерживает как 
  дейтаграммный обмен, так и обмен с установлением соединений.</FONT></P>
  <P align=justify><FONT face=Arial size=2>Протокол <B>SMB</B>, соответствующий 
  прикладному и представительному уровням модели OSI, регламентирует 
  взаимодействие рабочей станции с сервером. В функции SMB входят следующие 
  операции:</FONT></P>
  <UL>
    <LI><FONT face=Arial size=2>Управление сессиями. Создание и разрыв 
    логического канала между рабочей станцией и сетевыми ресурсами файлового 
    сервера.</FONT> 
    <LI><FONT face=Arial size=2>Файловый доступ. Рабочая станция может 
    обратиться к файл-серверу с запросами на создание и удаление каталогов, 
    создание, открытие и закрытие файлов, чтение и запись в файлы, 
    переименование и удаление файлов, поиск файлов, получение и установку 
    файловых атрибутов, блокирование записей.</FONT> 
    <LI><FONT face=Arial size=2>Сервис печати. Рабочая станция может ставить 
    файлы в очередь для печати на сервере и получать информацию об очереди 
    печати.</FONT> 
    <LI><FONT face=Arial size=2>Сервис сообщений. SMB поддерживает простую 
    передачу сообщений со следующими функциями: послать простое сообщение; 
    послать широковещательное сообщение; послать начало блока сообщений; послать 
    текст блока сообщений; послать конец блока сообщений; переслать имя 
    пользователя; отменить пересылку; получить имя машины.</FONT> </LI></UL>
  <P align=justify><FONT face=Arial size=2>Из-за большого количества приложений, 
  которые используют функции API, предоставляемые NetBIOS, во многих сетевых ОС 
  эти функции реализованы в виде интерфейса к своим транспортным протоколам. В 
  NetWare имеется программа, которая эмулирует функции NetBIOS на основе 
  протокола IPX, существуют программные эмуляторы NetBIOS для Windows NT и стека 
  TCP/IP.</FONT></P><B>
  <P><FONT size=2><FONT face=Arial>для чего нужно нам сие ценное знание? 
  (editorial)</FONT></P></FONT></B>
  <P><FONT face=Arial size=2>Как-то раз задал мне один коллега каверзный вопрос. 
  Ну вот, говорит, знаешь ты, что такое модель OSI... И для чего тебе это нужно, 
  какая от этого знания практическая польза: разве что повыпендриваться перед 
  чайниками? Неправда, польза от этого знания суть системный подход при решении 
  многих пракрического свойства задач. Например:</FONT><FONT size=2> 
  <UL>
    <LI><FONT face=Arial>troubleshooting (</FONT></FONT><FONT face=Arial 
    size=2>обнаружение и устранение неполадок)</FONT> </LI></UL>
  <P><FONT face=Arial size=2>Приходит к вам как к админу(опытному сетевику) 
  юзер(просто приятель) и говорит -- у меня тут "не соединяет". Нету, говорит, 
  сети и все тут. Начинаете разбираться. Так вот, исходя из опята наблюдения за 
  ближними своими, я заметила, что действия человека, "не осознающего модель OSI 
  в сердце своем", отличаются характерной хаотичностью: то провод подергает, то 
  вдруг в браузере что-то поковыряет. И приводит это зачастую к тому, что 
  двигаясь без направления такой "специалист" подергает что угодно и где угодно, 
  кроме как в области неполадки, убив кучу своего и чужого времени. При 
  осознании же существования уровней взаимодействия движение будет более 
  последовательным. И хотя отправная точка может быть разной (в каждой 
  попадавшейся мне книге рекомнедации несколько различались), общая логическая 
  посылка поиска неисправности такова -- если на уровне Х взаимодействие 
  осуществляется корректно, то и на уровне Х-1 скорее всего тоже все в порядке. 
  По крайней мере для каждого конкретного <I>момента</I> времени. Производя 
  траблшутинг в IP-сетях лично я начинаю "копать" от второго уровня стека DOD, 
  он же третий уровень OSI, он же Internet Protocol. Во первых потому, что 
  наиболее легко произвести "поверхностный осмотр пациента" (пациент скорее 
  пингуется, чем не пингуется), ну и во вторых, если, слава те Господи, 
  пингуется, можно отринуть малоприятные манипуляции с тестированием кабеля, 
  сетевых карт и разборок и прочими приятными вещами ;) Хотя в особо тяжелых 
  случаях придется начинать все-таки с уровня первого, причем самым серьезным 
  образом.</FONT> 
  <UL>
    <LI><FONT face=Arial size=2>взаимопонимание с коллегами</FONT> </LI></UL>
  <P><FONT face=Arial size=2>Для иллюстрирования этого пункта приведу вам в 
  качестве примера такую байку из жизни. Однажды знакомые мои из одной небольшой 
  фирмы позвали меня в гости помочь разобраться, почему сеть нехорошо работает, 
  и дать какие-нибудь рекомендации на сей счет. Прихожу я в контору. А у них там 
  оказывается даже админ есть, называемый по старой доброй традиции 
  "программист" (а вообще-то он FoxPro в основном занимается ;) -- старой 
  доперестроечной закалки IT-специалист. Ну я у него спрашиваю, что у вас за 
  сеть? Он: "В смысле? Ну просто сеть". Сеть, в общем, как сеть. Ну я наводящие 
  вопросы: на сетевом уровне какой протокол используется? Он: "А это ГДЕ?" Я 
  уточняю: "Ну IP или IPX или что там у вас..." "О" -- говорит, -- "кажется да: 
  IPX/еще-там-что-то!" Кстати, "еще-там-что-то", как вы могли заметить, от 
  сетевого уровня чуть-чуть повыше расположен, ну да не суть... Что характерно, 
  он эту сеть построил и даже худо бедно сопровождал. Не удивительно что она 
  зачахла-то... ;) А знал бы про OSI -- в 5 минут бы схемку нацарапал -- от 
  10Base-2 до прикладных программ. И не пришлось бы под стол лазить -- 
  коаксиальные провода обозревать.</FONT> 
  <UL>
    <LI><FONT face=Arial size=2>изучение новых технологий</FONT> </LI></UL>
  <P><FONT face=Arial size=2>На этом важном аспекте я уже останавливалась в 
  предисловии и еще раз повторюсь: при изучении нового протокола следует в 
  первую же очередь разобраться а) в каком стеке(ах) протоколов его место и б) в 
  какой именно части стека и с кем взаимодействует снизу и кто с ним сверху 
  может... :) И полноя ясность в голове от этого наступит. А форматы сообщений 
  да API разновсякие -- ну это уже дело техники :)</FONT></P><FONT 
  face=Arial><FONT size=-1>
  <P><B>Ваще, <A href="http://www.nestor.minsk.by/sr/forum/0111504.html">мнение 
  о статье</A></B></P>
  <P>(c)<A href="http://www.nestor.minsk.by/sr">сетевые решения</A></FONT></P>
  <P><A href="http://www.stars.ru/" target=_top><IMG border=0 height=31 
  src="Модель ISO_OSI.files/1000.gif" width=56></A><!-- SpyLOG v2 f:0111 -->
  <SCRIPT language=javascript> 
                   u="u581.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1; 
                   bv=Math.round(parseFloat(nv.appVersion)*100); 
                   n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random(); z="p="+p+"&rn="+rn;y=""; 
                   y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>"; 
                   y+="<img src='http://"+u+"/cnt?"+z+ 
                   "&r="+escape(d.referrer)+ "&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>"; 
                   y+="</a>"; d.write(y); if(!n) { d.write("<"+"!--"); } //--></SCRIPT>
   <NOSCRIPT><A href="http://u581.71.spylog.com/cnt?f=3&amp;p=1" 
  target=_blank><IMG alt=SpyLOG border=0 height=31 
  src="Модель ISO_OSI.files/cnt.gif" width=88> </A></NOSCRIPT>
  <SCRIPT language=javascript1.2><!-- 
                   if(!n) { d.write("--"+">"); }//--></SCRIPT>
<!-- SpyLOG --></P><!-- Russian LinkExchange code START --><A 
  href="http://www.linkexchange.ru/users/002726/goto.map" target=_top>
  <P><IMG alt="Russian LinkExchange Banner Network" border=0 height=60 
  src="Модель ISO_OSI.files/004786-164.gif" width=468></A><BR><A 
  href="http://www.linkexchange.ru/"><FONT size=2>Russian LinkExchange 
  Member</FONT></A><!-- Russian LinkExchange code END --> 
</P></BLOCKQUOTE></FONT></BODY></HTML>
